// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TigerTaiwanTripWebService;

namespace TigerTaiwanTripWebService.Migrations
{
    [DbContext(typeof(WorldTripContext))]
    [Migration("20190730051924_Add-TripName")]
    partial class AddTripName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TigerTaiwanTripDomain.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PassWord")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TigerTaiwanTripDomain.MemberTicket", b =>
                {
                    b.Property<Guid>("MemberId");

                    b.Property<Guid>("TicketId");

                    b.HasKey("MemberId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("MemberTickets");
                });

            modelBuilder.Entity("TigerTaiwanTripDomain.Ticket", b =>
                {
                    b.Property<Guid>("TicketID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<bool>("Payed");

                    b.Property<DateTime>("PaymentExpireDay");

                    b.Property<int>("PaymentMethodUsed");

                    b.Property<int>("TicketType");

                    b.Property<DateTime>("TravelStrateDate");

                    b.Property<string>("TripName");

                    b.HasKey("TicketID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TigerTaiwanTripDomain.MemberTicket", b =>
                {
                    b.HasOne("TigerTaiwanTripDomain.Member", "Member")
                        .WithMany("MemberTickets")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TigerTaiwanTripDomain.Ticket", "Ticket")
                        .WithMany("MemberTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
